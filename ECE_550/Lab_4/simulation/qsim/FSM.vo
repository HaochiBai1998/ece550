// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.0.0 Build 211 04/27/2016 SJ Lite Edition"

// DATE "09/19/2021 22:19:59"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module FSM (
	clock,
	Light);
input 	clock;
output 	Light;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Light~output_o ;
wire \clock~input_o ;
wire \state_N~19_combout ;
wire \state_C.S0~q ;
wire \state_C.S1~0_combout ;
wire \state_C.S1~q ;
wire \state_N~21_combout ;
wire \state_C.S2~q ;
wire \state_N~22_combout ;
wire \state_C.S3~q ;
wire \state_N~20_combout ;
wire \state_C.S4~q ;
wire \out~0_combout ;
wire \out~q ;


cycloneive_io_obuf \Light~output (
	.i(\out~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Light~output_o ),
	.obar());
// synopsys translate_off
defparam \Light~output .bus_hold = "false";
defparam \Light~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \clock~input (
	.i(clock),
	.ibar(gnd),
	.o(\clock~input_o ));
// synopsys translate_off
defparam \clock~input .bus_hold = "false";
defparam \clock~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \state_N~19 (
// Equation(s):
// \state_N~19_combout  = (!\state_C.S0~q  & (!\state_C.S2~q  & (!\state_C.S3~q  & \state_C.S1~q )))

	.dataa(\state_C.S0~q ),
	.datab(\state_C.S2~q ),
	.datac(\state_C.S3~q ),
	.datad(\state_C.S1~q ),
	.cin(gnd),
	.combout(\state_N~19_combout ),
	.cout());
// synopsys translate_off
defparam \state_N~19 .lut_mask = 16'h0100;
defparam \state_N~19 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \state_C.S0 (
	.clk(\clock~input_o ),
	.d(\state_N~19_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state_C.S0~q ),
	.prn(vcc));
// synopsys translate_off
defparam \state_C.S0 .is_wysiwyg = "true";
defparam \state_C.S0 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \state_C.S1~0 (
// Equation(s):
// \state_C.S1~0_combout  = !\state_C.S0~q 

	.dataa(\state_C.S0~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\state_C.S1~0_combout ),
	.cout());
// synopsys translate_off
defparam \state_C.S1~0 .lut_mask = 16'h5555;
defparam \state_C.S1~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \state_C.S1 (
	.clk(\clock~input_o ),
	.d(\state_C.S1~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state_C.S1~q ),
	.prn(vcc));
// synopsys translate_off
defparam \state_C.S1 .is_wysiwyg = "true";
defparam \state_C.S1 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \state_N~21 (
// Equation(s):
// \state_N~21_combout  = (!\state_C.S1~q  & !\state_C.S0~q )

	.dataa(\state_C.S1~q ),
	.datab(\state_C.S0~q ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\state_N~21_combout ),
	.cout());
// synopsys translate_off
defparam \state_N~21 .lut_mask = 16'h1111;
defparam \state_N~21 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \state_C.S2 (
	.clk(\clock~input_o ),
	.d(\state_N~21_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state_C.S2~q ),
	.prn(vcc));
// synopsys translate_off
defparam \state_C.S2 .is_wysiwyg = "true";
defparam \state_C.S2 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \state_N~22 (
// Equation(s):
// \state_N~22_combout  = (\state_C.S2~q  & !\state_C.S0~q )

	.dataa(\state_C.S2~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\state_C.S0~q ),
	.cin(gnd),
	.combout(\state_N~22_combout ),
	.cout());
// synopsys translate_off
defparam \state_N~22 .lut_mask = 16'h00AA;
defparam \state_N~22 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \state_C.S3 (
	.clk(\clock~input_o ),
	.d(\state_N~22_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state_C.S3~q ),
	.prn(vcc));
// synopsys translate_off
defparam \state_C.S3 .is_wysiwyg = "true";
defparam \state_C.S3 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \state_N~20 (
// Equation(s):
// \state_N~20_combout  = (\state_C.S3~q  & !\state_C.S0~q )

	.dataa(\state_C.S3~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\state_C.S0~q ),
	.cin(gnd),
	.combout(\state_N~20_combout ),
	.cout());
// synopsys translate_off
defparam \state_N~20 .lut_mask = 16'h00AA;
defparam \state_N~20 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \state_C.S4 (
	.clk(\clock~input_o ),
	.d(\state_N~20_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state_C.S4~q ),
	.prn(vcc));
// synopsys translate_off
defparam \state_C.S4 .is_wysiwyg = "true";
defparam \state_C.S4 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \out~0 (
// Equation(s):
// \out~0_combout  = (\state_N~19_combout  & ((\out~q ) # (\state_C.S4~q )))

	.dataa(\out~q ),
	.datab(\state_C.S4~q ),
	.datac(gnd),
	.datad(\state_N~19_combout ),
	.cin(gnd),
	.combout(\out~0_combout ),
	.cout());
// synopsys translate_off
defparam \out~0 .lut_mask = 16'hEE00;
defparam \out~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas out(
	.clk(\clock~input_o ),
	.d(\out~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\out~q ),
	.prn(vcc));
// synopsys translate_off
defparam out.is_wysiwyg = "true";
defparam out.power_up = "low";
// synopsys translate_on

assign Light = \Light~output_o ;

endmodule
